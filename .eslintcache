[{"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/index.js":"1","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/App.js":"2","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/Bar.js":"3","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/SortingAlgorithms/MergeSort.js":"4","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/Nav.js":"5","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/SortingVisualizer.js":"6","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/SecondNav.js":"7"},{"size":442,"mtime":1611561992996,"results":"8","hashOfConfig":"9"},{"size":202,"mtime":1611562012122,"results":"10","hashOfConfig":"9"},{"size":1394,"mtime":1611560944152,"results":"11","hashOfConfig":"9"},{"size":1659,"mtime":1611579400504,"results":"12","hashOfConfig":"9"},{"size":170,"mtime":1610806584082,"results":"13","hashOfConfig":"9"},{"size":2401,"mtime":1611595593201,"results":"14","hashOfConfig":"9"},{"size":951,"mtime":1611577966111,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1p2778q",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":7,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"18"},"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/index.js",[],["34","35"],"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/App.js",[],"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/Bar.js",["36"],"import React, { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\n\n// const color1 = \"#FED54A\";\n// const color2 = \"#FF9347\";\nconst color1 = \"#DB0B5F\";\nconst color2 = \"#6F00ED\";\n\n// https://css-tricks.com/snippets/css/gradient-text/\n// https://uicolorpicker.com/gradients\nconst Div = styled.div`\n    background: -webkit-linear-gradient(${color1}, ${color2});\n`;\n\n// -webkit-background-clip: text;\n// -webkit-text-fill-color: transparent;\n\nfunction Bar(props) {\n    const [Length, setLength] = useState(0);\n    const [Width, setWidth] = useState(0);\n    const [Color, setColor] = useState(\"#23C4ED\");\n    // turquoise\n\n    useEffect(() => {\n        setLength(props.Length);\n        setWidth(props.Width);\n        setColor(props.Color);\n    }, [props]);\n\n    return (\n        <div>\n            <div\n                className=\"text-center border border-primary rounded\"\n                style={{\n                    backgroundColor: `${Color}`,\n                    width: `${Width - 6}px`,\n                    height: `${Length}px`,\n                    margin: \"3px\",\n                    fontSize: \"10px\",\n                    transform: `rotate(0deg)`,\n                    verticalAlign: \"10px\",\n                }}\n                onClick={() => {\n                    console.log(Length);\n                }}\n            ></div>\n        </div>\n    );\n}\n\nexport default Bar;\n","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/SortingAlgorithms/MergeSort.js",["37"],"import timeoutCollection from \"time-events-manager\";\n\nlet heights = [];\nlet funct = () => {};\nlet Ind = 0;\n\nconst Merge = (StartIndex, EndIndex, MidIndex) => {\n\tlet I = StartIndex;\n\tlet J = MidIndex + 1;\n\tlet Len = EndIndex - StartIndex + 1;\n\tlet AuxilaryArray = [];\n\tfor (let i = 0; i < Len; i++) {\n\t\tif (I <= MidIndex && J <= EndIndex) {\n\t\t\tlet MN;\n\t\t\tif (heights[I] <= heights[J]) {\n\t\t\t\tMN = heights[I];\n\t\t\t\tI++;\n\t\t\t} else {\n\t\t\t\tMN = heights[J];\n\t\t\t\tJ++;\n\t\t\t}\n\t\t\tAuxilaryArray.push(MN);\n\t\t} else if (I <= MidIndex) {\n\t\t\tAuxilaryArray.push(heights[I]);\n\t\t\tI++;\n\t\t} else if (J <= EndIndex) {\n\t\t\tAuxilaryArray.push(heights[J]);\n\t\t\tJ++;\n\t\t}\n\t}\n\tconsole.assert(AuxilaryArray.length === Len, {\n\t\tAuxilaryArray: AuxilaryArray,\n\t\tLen: Len,\n\t});\n\tconsole.assert(I === MidIndex + 1 && J === EndIndex + 1, {\n\t\tI: I,\n\t\tJ: J,\n\t});\n\tfor (let cur = StartIndex; cur <= EndIndex; cur++) {\n\t\tlet Newheights = [...heights];\n\t\tNewheights[cur] = AuxilaryArray[cur - StartIndex];\n\t\theights = [...Newheights];\n\t\t// console.log(\"update heights called from mergesort\");\n\t\tInd += 1;\n\t\tfunct(heights, Ind);\n\t}\n};\n\nconst mergeSort = (StartIndex, EndIndex) => {\n\tif (EndIndex <= StartIndex) return;\n\tlet MidIndex = Math.floor((StartIndex + EndIndex) / 2);\n\tmergeSort(StartIndex, MidIndex);\n\tmergeSort(MidIndex + 1, EndIndex);\n\tMerge(StartIndex, EndIndex, MidIndex);\n};\n\nfunction MergeSort(height, Updateheights) {\n\t// console.log(\"merge sort called\");\n\tInd = 0;\n\tfunct = (parameter, index) => {\n\t\tsetTimeout(() => {\n\t\t\tUpdateheights(parameter);\n\t\t}, 50 * index);\n\t};\n\theights = [];\n\theights = [...height];\n\tmergeSort(0, heights.length - 1, Updateheights);\n}\n\nexport default MergeSort;\n","/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/Nav.js",[],"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/SortingVisualizer.js",["38","39","40","41","42","43","44"],"/home/ishank/Documents/CP/Projects/sorting-visualizer/src/Component/SecondNav.js",["45"],"import React, { useEffect, useState } from \"react\";\nimport { Button } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport MergeSort from \"../Component/SortingAlgorithms/MergeSort\";\n\nfunction SecondNav(props) {\n\tconst [arrayOfHeights, setarrayOfHeights] = useState(props.arrayOfHeights);\n\tconst [IsSorting, setIsSorting] = useState(props.IsSorting);\n\n\tuseEffect(() => {\n\t\tsetIsSorting(props.IsSorting);\n\t\tsetarrayOfHeights(props.arrayOfHeights);\n\t}, [props]);\n\n\treturn (\n\t\t<div>\n\t\t\t<div className=\"text-center\">\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"font-italic m-1\"\n\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\tonClick={props.UpdatearrayOfHeights}\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: `70%`,\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tGenerate New Array\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t\t<Button\n\t\t\t\t\tclassName=\"m-1\"\n\t\t\t\t\tonClick={() => MergeSort(arrayOfHeights, props.UpdatearrayOfHeights)}\n\t\t\t\t>\n\t\t\t\t\tMerge Sort\n\t\t\t\t</Button>\n\t\t\t\t<br />\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SecondNav;\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":11,"column":7,"nodeType":"52","messageId":"53","endLine":11,"endColumn":10},{"ruleId":"50","severity":1,"message":"54","line":1,"column":8,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"55","severity":2,"message":"56","line":20,"column":5,"nodeType":"52","messageId":"57","endLine":20,"endColumn":22},{"ruleId":"55","severity":2,"message":"58","line":27,"column":20,"nodeType":"52","messageId":"57","endLine":27,"endColumn":33},{"ruleId":"55","severity":2,"message":"59","line":31,"column":28,"nodeType":"52","messageId":"57","endLine":31,"endColumn":31},{"ruleId":"55","severity":2,"message":"56","line":34,"column":4,"nodeType":"52","messageId":"57","endLine":34,"endColumn":21},{"ruleId":"55","severity":2,"message":"60","line":68,"column":22,"nodeType":"52","messageId":"57","endLine":68,"endColumn":36},{"ruleId":"55","severity":2,"message":"60","line":82,"column":7,"nodeType":"52","messageId":"57","endLine":82,"endColumn":21},{"ruleId":"55","severity":2,"message":"60","line":86,"column":46,"nodeType":"52","messageId":"57","endLine":86,"endColumn":60},{"ruleId":"50","severity":1,"message":"61","line":8,"column":9,"nodeType":"52","messageId":"53","endLine":8,"endColumn":18},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'Div' is assigned a value but never used.","Identifier","unusedVar","'timeoutCollection' is defined but never used.","no-undef","'setarrayOfHeights' is not defined.","undef","'Get_Bar_Count' is not defined.","'rnd' is not defined.","'arrayOfHeights' is not defined.","'IsSorting' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]